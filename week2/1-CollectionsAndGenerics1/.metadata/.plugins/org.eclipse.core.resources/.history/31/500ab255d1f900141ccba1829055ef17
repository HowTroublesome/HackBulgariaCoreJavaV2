import java.util.Collection;
import java.util.Deque;
import java.util.LinkedList;


public class UtilityMethods {
    
    private static <T> void rotate(Collection<T> collection, int rotateStep) {
        Deque<T> myDeque = new LinkedList<T>();
        
        myDeque.addAll(collection);
        collection.clear();
        
        if(rotateStep > myDeque.size()) {
            rotateStep = rotateStep % myDeque.size();
        }
        
        while(rotateStep != 0) {
            if(rotateStep > 0) {
                myDeque.addFirst(myDeque.pollLast());
                rotateStep--;
            }
            else {
                myDeque.addLast(myDeque.pollFirst());
                rotateStep++;
            }
        }
        
        collection.addAll(myDeque);
        myDeque.clear();
    }
    
}
